{"version":3,"sources":["..\\..\\electron\\main\\client.ts"],"sourcesContent":["import MainWindow from \"./window/main\";\r\nimport {app, BrowserWindow} from 'electron'\r\nimport ShortcutService from \"./shortcut\";\r\nimport IPCService from \"./ipc\";\r\n\r\nexport type ClientContext = EasyCustomerClient\r\n\r\nexport type HiLinkContextStatus =\r\n  'before-create'\r\n  | 'created'\r\n  | 'before-quit'\r\n  | 'quited'\r\n  | 'before-close'\r\n  | 'closed'\r\n\r\nclass EasyCustomerClient {\r\n  public status: HiLinkContextStatus = 'before-create'\r\n\r\n  public inMeeting: boolean = false\r\n  public isDesktopSharing: boolean = false\r\n\r\n  // 窗口\r\n  public mainWindow: MainWindow\r\n\r\n  public shortcut: ShortcutService\r\n  public ipc: IPCService\r\n\r\n  constructor() { }\r\n\r\n  public createClient() {\r\n    app.on('ready', this.onReady.bind(this))\r\n    app.on('before-quit', this.onBeforeQuit.bind(this))\r\n    app.on('window-all-closed', this.onWindowAllClosed.bind(this))\r\n    app.on('activate', this.onActivate.bind(this))\r\n    app.on('quit', this.onQuit.bind(this))\r\n\r\n    app.on('second-instance', this.onSecondInstance.bind(this))\r\n\r\n    // 限制只运行一个实例\r\n    const isLockFetched = app.requestSingleInstanceLock()\r\n    if (!isLockFetched) { // 没拿到锁则说明有其他实例在运行\r\n      this.status = 'before-quit'\r\n      app.quit()\r\n    }\r\n\r\n    process.on('exit', (code) => app.exit(code))\r\n  }\r\n\r\n  // 生命周期\r\n\r\n  private onReady() {\r\n    this.status = 'created'\r\n\r\n    this.createIPC() // 首先创建IPC服务\r\n\r\n    // 创建窗口\r\n    this.createMainWindow()\r\n\r\n    this.ipc.createMainWindowCommunication()\r\n  }\r\n  private onBeforeQuit() { this.status = 'before-quit' }\r\n  private onWindowAllClosed() {\r\n    this.status = 'closed'\r\n    if (process.platform !== 'darwin') app.quit()\r\n  }\r\n  private onActivate() {\r\n    if (BrowserWindow.getAllWindows().length > 0) return\r\n    if (!this.mainWindow || this.mainWindow.isDestroyed) {\r\n      return this.createMainWindow()\r\n    }\r\n\r\n    this.mainWindow.show()\r\n  }\r\n  private onQuit() { this.status = 'quited' }\r\n\r\n  private onSecondInstance() {\r\n    if (this.mainWindow) {\r\n      this.mainWindow.focusWindow()\r\n    }\r\n  }\r\n\r\n  // 创建窗口\r\n  private createMainWindow() {\r\n    this.mainWindow = new MainWindow(this)\r\n    this.mainWindow.createWindow()\r\n\r\n    return this.mainWindow\r\n  }\r\n\r\n  // 创建跨进程通信\r\n  private createIPC() {\r\n    if (this.ipc) return\r\n\r\n    this.ipc = new IPCService(this)\r\n\r\n    this.ipc.createBaseCommunication()\r\n  }\r\n  // 创建快捷键\r\n  private createShortCut() {\r\n    this.shortcut = new ShortcutService(this)\r\n\r\n    this.mainWindow.nativeWindow.on('focus', () => this.shortcut.createMainWindowShortcut())\r\n    this.mainWindow.nativeWindow.on('blur', () => this.shortcut.destroyMainWindowShortcut())\r\n  }\r\n}\r\n\r\nexport default EasyCustomerClient"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAuB;AACvB,sBAAiC;AACjC,sBAA4B;AAC5B,iBAAuB;AAYvB,MAAM,mBAAmB;AAAA,EAYvB,cAAc;AAXd,SAAO,SAA8B;AAErC,SAAO,YAAqB;AAC5B,SAAO,mBAA4B;AAAA,EAQnB;AAAA,EAET,eAAe;AACpB,wBAAI,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AACvC,wBAAI,GAAG,eAAe,KAAK,aAAa,KAAK,IAAI,CAAC;AAClD,wBAAI,GAAG,qBAAqB,KAAK,kBAAkB,KAAK,IAAI,CAAC;AAC7D,wBAAI,GAAG,YAAY,KAAK,WAAW,KAAK,IAAI,CAAC;AAC7C,wBAAI,GAAG,QAAQ,KAAK,OAAO,KAAK,IAAI,CAAC;AAErC,wBAAI,GAAG,mBAAmB,KAAK,iBAAiB,KAAK,IAAI,CAAC;AAG1D,UAAM,gBAAgB,oBAAI,0BAA0B;AACpD,QAAI,CAAC,eAAe;AAClB,WAAK,SAAS;AACd,0BAAI,KAAK;AAAA,IACX;AAEA,YAAQ,GAAG,QAAQ,CAAC,SAAS,oBAAI,KAAK,IAAI,CAAC;AAAA,EAC7C;AAAA,EAIQ,UAAU;AAChB,SAAK,SAAS;AAEd,SAAK,UAAU;AAGf,SAAK,iBAAiB;AAEtB,SAAK,IAAI,8BAA8B;AAAA,EACzC;AAAA,EACQ,eAAe;AAAE,SAAK,SAAS;AAAA,EAAc;AAAA,EAC7C,oBAAoB;AAC1B,SAAK,SAAS;AACd,QAAI,QAAQ,aAAa;AAAU,0BAAI,KAAK;AAAA,EAC9C;AAAA,EACQ,aAAa;AACnB,QAAI,8BAAc,cAAc,EAAE,SAAS;AAAG;AAC9C,QAAI,CAAC,KAAK,cAAc,KAAK,WAAW,aAAa;AACnD,aAAO,KAAK,iBAAiB;AAAA,IAC/B;AAEA,SAAK,WAAW,KAAK;AAAA,EACvB;AAAA,EACQ,SAAS;AAAE,SAAK,SAAS;AAAA,EAAS;AAAA,EAElC,mBAAmB;AACzB,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,YAAY;AAAA,IAC9B;AAAA,EACF;AAAA,EAGQ,mBAAmB;AACzB,SAAK,aAAa,IAAI,YAAAA,QAAW,IAAI;AACrC,SAAK,WAAW,aAAa;AAE7B,WAAO,KAAK;AAAA,EACd;AAAA,EAGQ,YAAY;AAClB,QAAI,KAAK;AAAK;AAEd,SAAK,MAAM,IAAI,WAAAC,QAAW,IAAI;AAE9B,SAAK,IAAI,wBAAwB;AAAA,EACnC;AAAA,EAEQ,iBAAiB;AACvB,SAAK,WAAW,IAAI,gBAAAC,QAAgB,IAAI;AAExC,SAAK,WAAW,aAAa,GAAG,SAAS,MAAM,KAAK,SAAS,yBAAyB,CAAC;AACvF,SAAK,WAAW,aAAa,GAAG,QAAQ,MAAM,KAAK,SAAS,0BAA0B,CAAC;AAAA,EACzF;AACF;AAEA,IAAO,gBAAQ;","names":["MainWindow","IPCService","ShortcutService"],"file":"client.js"}